{"version":3,"sources":["serviceWorker.js","components/robots.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","robots","id","name","username","email","Card","className","alt","src","style","width","height","CardList","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","overflow","border","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mDClBOC,EAAS,CACpB,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2BCrCIC,EApBH,SAAC,GAAsB,IAArBH,EAAoB,EAApBA,KAAME,EAAc,EAAdA,MAAOH,EAAO,EAAPA,GAE1B,OACC,yBACAK,UAAU,sDAET,yBAAKC,IAAI,SACTC,IAAK,uBAAuBP,EAC5BQ,MAAO,CAACC,MAAO,IAAKC,OAAQ,OAE5B,6BACC,4BAAKT,GACL,2BAAIE,EACJ,6BADA,QCQWQ,EAnBC,SAAC,GAAa,IAAZZ,EAAW,EAAXA,OACjB,OACC,6BAECA,EAAOa,KAAI,SAACC,EAAKC,GAChB,OACC,yBAAKT,UAAU,MAAMU,IAAKD,GACzB,kBAAC,EAAD,CACAb,KAAMF,EAAOe,GAAGb,KAChBE,MAAOJ,EAAOe,GAAGX,MACjBH,GAAID,EAAOe,GAAGd,WCALgB,EAXE,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC9B,OACC,yBAAKb,UAAU,OACd,2BAAOc,KAAK,SACZd,UAAU,mCACVe,YAAY,gBACZC,SAAUH,MCGEI,G,MATD,SAACC,GAEd,OACC,yBAAKf,MAAO,CAACgB,SAAS,SAASC,OAAO,sBAAsBf,OAAO,UAClEa,EAAMG,YCqCMC,E,YAnCd,aAAc,IAAD,8BACZ,+CAYDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAAEb,YAAaY,EAAME,OAAOC,SAZzC,EAAKC,MAAM,CACVlC,OAAOA,EACPkB,YAAY,IAJF,E,iFAOO,IAAD,OAClBiB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAtB,GAAI,OAAE,EAAKiB,SAAS,CAAC/B,OAAOA,S,+BAQ1B,IAAD,EACsBuC,KAAKL,MAA5BlC,EADC,EACDA,OAAQkB,EADP,EACOA,YACRsB,EAAgBxC,EAAOyC,QAAO,SAAAC,GACnC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS1B,EAAYyB,kBAErD,OAAQ3C,EAAO6C,OAEd,yBAAKvC,UAAU,MACd,2CACA,kBAAC,EAAD,CAAWa,aAAcoB,KAAKV,iBAC9B,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAU7B,OAAQwC,MALrB,2C,GAzBeM,aCClBC,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,SPsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjB,MAAK,SAAAkB,GACjCA,EAAaC,iB","file":"static/js/main.8a6118e8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React from 'react';\r\n\r\nconst Card =({name, email, id}) =>{\r\n\r\n\treturn(\r\n\t\t<div \r\n\t\tclassName='tc bg-light-green \r\n\t\t br3 pa3 ma2 grow bw3 shadow-5'>\r\n\t\t\t<img alt='robots' \r\n\t\t\tsrc={'http://robohash.org/'+id} \r\n\t\t\tstyle={{width: 200, height: 200}}/>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email} \r\n\t\t\t\t<br/> </p>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({robots}) =>{\r\n\treturn(\t\t\r\n\t\t<div>\r\n\t\t{\r\n\t\t\trobots.map((user,i)=>{\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<div className='dib' key={i}>\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\temail={robots[i].email} \r\n\t\t\t\t\t\tid={robots[i].id} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox =({searchfield,searchChange}) =>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input type=\"search\" \r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange}/>\r\n\t\t\t\r\n\t\t</div>\r\n \t\t);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll =(props) =>{\r\n\r\n\treturn(\r\n\t\t<div style={{overflow:'scroll',border:'3px solid #0ccac4d6',height:'800px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t\r\n\t\t);\r\n};\r\nexport default Scroll;","import React ,{Component}from 'react';\r\nimport {robots} from '../components/robots';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll.js'\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\t\tthis.state={\r\n\t\t\t\trobots:robots,\r\n\t\t\t\tsearchfield:''\r\n\t\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>response.json())\r\n\t\t.then(user=>this.setState({robots:robots}))\t\r\n\t}\r\n\r\n\tonSearchChange=(event)=>{\r\n\t\tthis.setState({ searchfield: event.target.value})\r\n\t\t\r\n\t\t// console.log(event.target.value);\r\n\t}\r\n\trender(){\r\n\t\tconst{robots, searchfield} = this.state;\r\n\t\tconst filteredRobots =robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\t\treturn !robots.length? \r\n\t\t\t<h1>Loading</h1> :(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t \t);\r\n\t}\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport 'tachyons';\n\nimport App from './containers/App';\n\nReactDOM.render(\n\t\t<App/>\n\n, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}